{"version":3,"file":"static/js/929.1b468d20.chunk.js","mappings":"2NACA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA8F,4BAA9F,EAAgI,0B,SCqEhI,EAjEqB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAChBC,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGZ,GAA0BC,EAAAA,EAAAA,WAAS,UAAKJ,IAAxC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdP,EAAgBO,EAAhBP,KAAMQ,EAAUD,EAAVC,MACdH,GAAS,SAAAI,GACP,OAAO,kBAAKA,GAAZ,cAAwBT,EAAOQ,GAChC,GACF,EAQD,OACE,kBAAME,UAAWC,EAAUb,SAPR,SAAAc,GACnBA,EAAEC,iBACFf,EAASM,GACTC,GAAS,UAAKN,GACf,EAGC,WACE,mBAAOW,UAAWC,EAAWG,QAAQ,GAArC,kBAEE,kBACEJ,UAAWC,EACXI,KAAK,OACLf,KAAK,OACLQ,MAAOJ,EAAMJ,KACbgB,SAAUV,EACVW,UAAQ,QAGZ,mBAAOP,UAAWC,EAAWG,QAAQ,GAArC,mBAEE,kBACEJ,UAAWC,EACXI,KAAK,QACLf,KAAK,QACLQ,MAAOJ,EAAMH,MACbe,SAAUV,EACVW,UAAQ,QAGZ,mBAAOP,UAAWC,EAAWG,QAAQ,GAArC,sBAEE,kBACEJ,UAAWC,EACXI,KAAK,WACLf,KAAK,WACLQ,MAAOJ,EAAMF,SACbc,SAAUV,EACVW,UAAQ,QAIZ,mBAAQP,UAAWC,EAASI,KAAK,SAAjC,wBAKL,E,2BC5CD,EAhBqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAKhB,OACE,4BACE,2CACA,SAAC,EAAD,CAAczB,SAPC,SAAA0B,GACjBN,GAASO,EAAAA,EAAAA,IAAgBD,GAC1B,IAMIF,IAAU,uBAAIC,MAGpB,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\",\"input\":\"RegisterForm_input__FsgBz\",\"btn\":\"RegisterForm_btn__bgTuW\"};","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport css from './RegisterForm.module.css';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const initialState = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(state);\n    setState({ ...initialState });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label} htmlFor=\"\">\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={state.name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className={css.label} htmlFor=\"\">\n        Email\n        <input\n          className={css.input}\n          type=\"email\"\n          name=\"email\"\n          value={state.email}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className={css.label} htmlFor=\"\">\n        Password\n        <input\n          className={css.input}\n          type=\"password\"\n          name=\"password\"\n          value={state.password}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <button className={css.btn} type=\"submit\">\n        Register\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n\nRegisterForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { signUpOperation } from 'redux/auth/authOperations';\n\nimport { selectAuthError } from 'redux/selectors';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const { status, message } = useSelector(selectAuthError);\n  const onRegister = data => {\n    dispatch(signUpOperation(data));\n  };\n\n  return (\n    <div>\n      <h2>Register Page</h2>\n      <RegisterForm onSubmit={onRegister} />\n      {status && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["onSubmit","initialState","name","email","password","useState","state","setState","handleChange","target","value","prevState","className","css","e","preventDefault","htmlFor","type","onChange","required","dispatch","useDispatch","useSelector","selectAuthError","status","message","data","signUpOperation"],"sourceRoot":""}