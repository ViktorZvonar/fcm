{"version":3,"file":"static/js/804.cc7d1d18.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/MyContacts/ContactForm/ContactForm.jsx","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/ListItemText/ListItemText.js","components/MyContacts/ContactsList/ContactList.jsx","components/MyContacts/Filter/Filter.jsx","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/system/esm/Stack/Stack.js","components/MyContacts/MyContacts.jsx","pages/MyContactsPage.jsx","shared/Form.styled.js","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import Notiflix from 'notiflix';\n\nimport { useState, useEffect } from 'react';\n\nimport { Button, TextField } from '@mui/material';\n\nimport {\n  fetchAllContacts,\n  fetchAddContact,\n} from 'redux/contacts/contactsOperations';\n\nimport { nanoid } from 'nanoid';\n\nimport { Form } from 'shared/Form.styled';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectFilteredContacts } from 'redux/selectors';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const onAddContact = payload => {\n    const normalizedName = payload.name.toLowerCase();\n\n    Notiflix.Notify.init({\n      width: '400px',\n      position: 'right-top',\n      timeout: 5000,\n    });\n\n    contacts.find(\n      contact =>\n        contact.name.toLowerCase() === normalizedName ||\n        contact.number === payload.number\n    )\n      ? Notiflix.Notify.warning(`This contact is already in your book.`)\n      : dispatch(fetchAddContact(payload)) && setState({ ...initialState });\n  };\n\n  const initialState = {\n    name: '',\n    number: '',\n  };\n\n  const [state, setState] = useState({ ...initialState });\n\n  const nameInputId = nanoid();\n  const phoneInputId = nanoid();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddContact(state);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <TextField\n        sx={{ marginBottom: '40px' }}\n        name=\"name\"\n        type=\"text\"\n        label=\"Name\"\n        value={state.name}\n        id={nameInputId}\n        onChange={handleChange}\n        required\n        helperText=\"Provide contact's name\"\n        autoComplete=\"current\"\n      />\n\n      <TextField\n        sx={{ marginBottom: '40px' }}\n        name=\"number\"\n        type=\"tel\"\n        label=\"Number\"\n        value={state.number}\n        id={phoneInputId}\n        onChange={handleChange}\n        required\n        helperText=\"Phone number can contain - or / and can start with +\"\n        autoComplete=\"current\"\n      />\n\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        size=\"small\"\n        color=\"secondary\"\n        sx={{\n          marginRight: 'auto',\n\n          width: '200px',\n        }}\n      >\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","import { fetchDeleteContact } from 'redux/contacts/contactsOperations';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectFilteredContacts } from 'redux/selectors';\n\nimport { Button, List, ListItem, ListItemText } from '@mui/material';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const onRemoveContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  return (\n    <List sx={{}}>\n      {contacts.map(contact => (\n        <ListItem key={contact.id} name={contact.name} number={contact.number}>\n          <ListItemText\n            sx={{\n              color: '#1976d2',\n              justifyContent: 'space-between',\n            }}\n            primary={contact.name}\n            secondary={contact.number}\n          ></ListItemText>\n\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color=\"secondary\"\n            sx={{\n              width: '100px',\n            }}\n            onClick={() => onRemoveContact(contact.id)}\n          >\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { TextField } from '@mui/material';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <TextField\n      sx={{\n        marginBottom: '40px',\n        width: '500px',\n      }}\n      name=\"filter\"\n      type=\"text\"\n      label=\"Find a specified contact\"\n      filter={filter}\n      onChange={onSetFilter}\n      helperText=\"Start typing a name or a number\"\n    />\n  );\n};\n\nexport default Filter;\n","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport systemStyled from '../styled';\nimport useThemePropsSystem from '../useThemeProps';\nimport { extendSxProp } from '../styleFunctionSx';\nimport createTheme from '../createTheme';\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from '../breakpoints';\nimport { createUnarySpacing, getValue } from '../spacing';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n        component = 'div',\n        direction = 'column',\n        spacing = 0,\n        divider,\n        children,\n        className\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = {\n      direction,\n      spacing\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: divider ? joinChildren(children, divider) : children\n    }));\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","import PropTypes from 'prop-types';\nimport createStack from './createStack';\n/**\n *\n * Demos:\n *\n * - [Stack (Material UI)](https://mui.com/material-ui/react-stack/)\n * - [Stack (MUI System)](https://mui.com/system/react-stack/)\n *\n * API:\n *\n * - [Stack API](https://mui.com/system/api/stack/)\n */\nconst Stack = createStack();\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","import ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactsList/ContactList';\nimport Filter from './Filter/Filter';\n\nimport { Stack, Box } from '@mui/system';\nimport { Typography } from '@mui/material';\n\nconst MyContacts = () => {\n  return (\n    <Stack\n      direction=\"row\"\n      sx={{\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        fontSize: 20,\n        color: '#010101',\n      }}\n    >\n      <Box>\n        <Typography\n          sx={{\n            textAlign: 'start',\n            marginTop: '30px',\n            marginBottom: '30px',\n            fontSize: '28px',\n            fontWeight: '700',\n            color: 'orange',\n          }}\n          component=\"h1\"\n        >\n          Add a new contact here\n        </Typography>\n        <ContactForm />\n      </Box>\n      <Box>\n        <Typography\n          sx={{\n            textAlign: 'start',\n            marginTop: '30px',\n            marginBottom: '30px',\n            fontSize: '28px',\n            fontWeight: '700',\n            color: 'orange',\n          }}\n          component=\"h1\"\n        >\n          Manage your contacts here\n        </Typography>\n        <Filter />\n        <ContactList />\n      </Box>\n    </Stack>\n  );\n};\n\nexport default MyContacts;\n","import MyContacts from '../components/MyContacts/MyContacts';\n\nconst MyContactsPage = () => {\n  return (\n    <div className=\"container\">\n      <MyContacts />\n    </div>\n  );\n};\n\nexport default MyContactsPage;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n`;\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","contacts","useSelector","selectFilteredContacts","dispatch","useDispatch","useEffect","fetchAllContacts","initialState","name","number","useState","state","setState","nameInputId","phoneInputId","handleChange","target","value","prevState","onSubmit","e","preventDefault","payload","normalizedName","toLowerCase","Notiflix","width","position","timeout","find","contact","fetchAddContact","onAddContact","TextField","sx","marginBottom","type","label","onChange","required","helperText","autoComplete","Button","variant","color","marginRight","getListItemTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListItemTextRoot","styled","overridesResolver","props","styles","ownerState","listItemTextClasses","primary","secondary","root","inset","multiline","dense","_extends","flex","minWidth","marginTop","paddingLeft","React","inProps","ref","useThemeProps","children","className","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","other","_objectWithoutPropertiesLoose","ListContext","classes","slots","composeClasses","useUtilityClasses","Typography","_jsx","component","undefined","display","_jsxs","clsx","List","map","ListItem","justifyContent","onClick","fetchDeleteContact","filter","selectFilter","setFilter","createStyled","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","useThemePropsDefault","useThemePropsSystem","joinChildren","separator","childrenArray","Boolean","reduce","output","child","index","push","length","key","style","theme","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","deepmerge","margin","row","column","getValue","mergeBreakpointsInOrder","Stack","options","createStyledComponent","componentName","StackRoot","themeProps","extendSxProp","divider","as","createStack","fontSize","Box","textAlign","fontWeight","Form","createBox"],"sourceRoot":""}